<idea-plugin>
    <id>codes.seanhenry.mockgenerator</id>
    <name>Swift Mock Generator for AppCode</name>
    <version>12</version>
    <vendor email="hello@seanhenry.codes" url="https://github.com/seanhenry/MockGenerator">Sean Henry</vendor>

    <description><![CDATA[
      Automatically generate your mocks in one action.
      <ul>
        <li>Generates mock conforming to one or many protocols.</li>
        <li>Generates mock conforming to a class.</li>
        <li>Captures invocation status of methods.</li>
        <li>Captures invocation status of properties.</li>
        <li>Records multiple invocations of methods.</li>
        <li>Records multiple invocations of properties.</li>
        <li>Captures invoked method parameters.</li>
        <li>Records multiple invocations of method parameters.</li>
        <li>Stubs values for your mocks to return.</li>
        <li>Stubs a default value for return values where possible.</li>
        <li>Automatically calls closure parameters with stubbed values.</li>
        <li>Generates convenience initializers requiring no parameters.</li>
        <li>Supports initializers with arguments.</li>
        <li>Supports failable initialzers.</li>
        <li>Supports required initialzers.</li>
        <li>Stub an error for your mock method to throw.</li>
        <li>Supports throwing initializers.</li>
        <li>Supports throwing closures.</li>
        <li>Generates generic mocks from protocols with associated types.</li>
        <li>Captures invoked generic parameters.</li>
        <li>Captures invoked generic return values.</li>
        <li>Avoids naming clashes from overloaded methods.</li>
        <li>Supports parameter type-annotation attributes and `inout`.</li>
        <li>Respects the mock scope and generates `public` and `open` methods and properties.</li>
        <li>Generate mock inheriting from items in 3rd party frameworks.</li>
      </ul>
      <h3>Before:</h3>
      <pre>
class MockDataStore: DataStore {
  
}
      </pre>
      <h3>After:</h3>
      <pre>
class MockDataStore: DataStore {

    var invokedSave = false
    var invokedSaveCount = 0
    var invokedSaveParameters: (data: Data, file: URL)?
    var invokedSaveParametersList = [(data: Data, file: URL)]()
    var stubbedSaveError: Error?
    var stubbedSaveResult: Bool! = false

    func save(_ data: Data, to file: URL) throws -> Bool {
        invokedSave = true
        invokedSaveCount += 1
        invokedSaveParameters = (data, file)
        invokedSaveParametersList.append((data, file))
        if let error = stubbedSaveError {
            throw error
        }
        return stubbedSaveResult
    }
}
      </pre>
    ]]></description>

    <change-notes><![CDATA[
      <ul>
        <li>Fixes missing method error in AppCode 2018.1.2.</li>
      </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="181.4668"/>

    <actions>
    </actions>

    <depends>com.intellij.modules.appcode</depends>

    <project-components>
        <component>
            <implementation-class>codes.seanhenry.intentions.MockGeneratingIntention</implementation-class>
        </component>
    </project-components>

    <extensions defaultExtensionNs="com.intellij">
        <intentionAction>
            <className>codes.seanhenry.intentions.MockGeneratingIntention</className>
            <category>Swift</category>
        </intentionAction>
    </extensions>

</idea-plugin>
